#!/bin/bash
#
# activemq		Start up the ActiveMQ daemon
#
# chkconfig: 2345 55 25
# description: SSH is a protocol for secure remote shell access. \
#              This service starts up the OpenSSH server daemon.
#

### BEGIN INIT INFO
# Provides: activemq
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the ActiveMQ daemon
# Description:       ActiveMQ
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0
prog="activemq"
lockfile=/var/lock/subsys/$prog

# Some functions to make the below more readable
ROOTDIR=<%= @rootdir %>
ACTIVEMQ=$ROOTDIR/bin/activemq
PID_FILE=$ROOTDIR/data/activemq-`hostname`.pid

runlevel=$(set -- $(runlevel); eval "echo \$$#" )

start()
{
	[ -x $ACTIVEMQ ] || exit 5
	[ -f $ROOTDIR/conf/activemq.xml ] || exit 6

	echo -n $"Starting $prog: "
        $ROOTDIR/bin/activemq start && success || failure
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $lockfile
	echo
	return $RETVAL
}

stop()
{
	echo -n $"Stopping $prog: "
	$ROOTDIR/bin/activemq stop
	RETVAL=$?
	# if we are in halt or reboot runlevel kill all running sessions
	# so the TCP connections are closed cleanly
	# if [ "x$runlevel" = x0 -o "x$runlevel" = x6 ] ; then
	    # trap '' TERM
	    # killall $prog 2>/dev/null
	    # trap TERM
	# fi
	[ $RETVAL -eq 0 ] && rm -f $lockfile
	echo
}

restart() {
	stop
	start
}

rh_status() {
	$ROOTDIR/bin/activemq status
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

case "$1" in
	start)
		rh_status_q && exit 0
		start
		;;
	stop)
		if ! rh_status_q; then
			rm -f $lockfile
			exit 0
		fi
		stop
		;;
	restart)
		restart
		;;
	status)
		rh_status
		RETVAL=$?
		if [ $RETVAL -eq 3 -a -f $lockfile ] ; then
			RETVAL=2
		fi
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=2
esac
exit $RETVAL
