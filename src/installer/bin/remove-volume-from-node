#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

from tortuga.cli.tortugaCli import TortugaCli
from tortuga.node.nodeApiFactory import getNodeApi
from tortuga.exceptions.invalidCliRequest import InvalidCliRequest


class RemoveVolumeFromNodeCli(TortugaCli):
    """
    Remove volume from node command line interface.
    """

    def __init__(self):
        TortugaCli.__init__(self)

        self.addOption('--node', dest='node', help=_('node name'))

        self.addOption('--volume', dest='volume',
                       help=_('SAN volume identifier'))

    def runCommand(self):
        self.parseArgs(_("""
    remove-volume-from-node --volume=VOLUME --node=NODE

Description:
    The remove-volume-from-node tool removes an pre-existing storage volume to an existing node.
    This command will only work with nodes associated with a hardware profile that
    supports dynamic addition and deletion of storage volumes.
"""))

        node = self.getOptions().node
        volume = self.getOptions().volume

        if not node:
            raise InvalidCliRequest(_('Node must be specified'))

        if not volume:
            raise InvalidCliRequest(_('Volume must be specified'))

        api = getNodeApi(self.getUsername(), self.getPassword())

        api.removeStorageVolume(node, volume)


if __name__ == '__main__':
    RemoveVolumeFromNodeCli().run()
