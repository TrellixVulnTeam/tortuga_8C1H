#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from tortuga.admin.adminCli import AdminCli
from tortuga.admin.adminApiFactory import getAdminApi
from tortuga.objects.admin import Admin
# from tortuga.exceptions.invalidCliRequest import InvalidCliRequest


class UpdateAdminCli(AdminCli):
    def __init__(self):
        AdminCli.__init__(self)

        self.addOption('--admin-username', dest='adminUsername',
                       help=_('Username of admin.'))

        self.addOption('--admin-id', dest='adminId',
                       help=_('ID of admin.'))

        self.addOption('--admin-password', dest='adminPassword',
                       help=_('Password of admin.'))

        self.addOption('--uncrypted', dest='isCrypted',
                       help=_('Is the password crypted'), default=False,
                       action='store_false')

        self.addOption('--admin-realname', dest='adminRealname',
                       help=_('Realname of admin.'))

        self.addOption('--admin-description', dest='adminDescription',
                       help=_('Description of admin.'))

    def runCommand(self):
        self.parseArgs(_("""
    update-admin --admin-username=ADMINUSERNAME
       --admin-password=ADMINPASSWORD --admin-id=ADMINID [ --uncrypted ]
       --admin-realname=ADMINREALNAME
       --admin-description=ADMINDESCRIPTION

Description:
    The  update-admin  tool  updates  a single administrative user to the
    Tortuga system.  This user does not need to match any operating sys-
    tem  user.   When  updating  a  user the password and username can be
    changed.
"""))

        # adminId = self._options.adminId
        # if adminId is None:
        #     raise InvalidCliRequest(_('Missing Admin Id'))

        admin = Admin()
        admin.setUsername(self.getArgs().adminUsername)
        admin.setPassword(self.getArgs().adminPassword)
        admin.setRealname(self.getArgs().adminRealname)
        admin.setDescription(self.getArgs().adminDescription)

        admin.setId(self.getArgs().adminId)

        api = getAdminApi(self.getUsername(), self.getPassword())

        api.updateAdmin(admin, self._options.isCrypted)


if __name__ == '__main__':
    UpdateAdminCli().run()
