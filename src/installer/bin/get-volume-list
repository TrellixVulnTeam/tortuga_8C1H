#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

from tortuga.cli.tortugaCli import TortugaCli
from tortuga.node.nodeApiFactory import getNodeApi
from tortuga.san.sanApiFactory import getSanApi


class GetVolumeListCli(TortugaCli):
    """
    Add volume command line interface.
    """

    def __init__(self):
        TortugaCli.__init__(self)

        self.addOption(
            '--node', dest='node', metavar='NAME', help=_('node name'))

    def runCommand(self):
        self.parseArgs(_("""
    get-volume-list [--node NAME]

Description:
    The get-volume-list tool displays the current storage volumes in the system by default.
    If a node name is passed only the volumes attached to that node are displayed.
"""))

        nodeName = self.getArgs().node

        if nodeName is not None:
            api = getNodeApi(self.getUsername(), self.getPassword())

            volumes = api.getStorageVolumeList(nodeName)

            # If node name show all volumes
            print ('Volume ID\t\t\t\tSize\t\tPersistent\tShared\t\t'
                   'Storage Adapter')

            for vol in volumes:
                volSize = self._getDiskSizeDisplayStr(int(vol.getSize()))

                print('%s\t%-10s\t%s\t\t%s\t\t%s' % (
                    vol.getId(), volSize, vol.getPersistent(),
                    vol.getShared(), vol.getStorageAdapter()))
        else:
            api = getSanApi(self.getUsername(), self.getPassword())
            volumes = api.getVolumeList()

            # If no node name only show persistent volumes
            print('Volume ID\t\t\t\tSize\t\tShared\t\tStorage Adapter')

            for vol in volumes:
                volSize = self._getDiskSizeDisplayStr(int(vol.getSize()))

                print('%s\t%-10s\t%s\t\t%s' % (
                    vol.getId(), volSize, vol.getShared(),
                    vol.getStorageAdapter()))


if __name__ == '__main__':
    GetVolumeListCli().run()
