#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

from tortuga.cli.tortugaCli import TortugaCli
from tortuga.node.nodeApiFactory import getNodeApi
from tortuga.exceptions.invalidCliRequest import InvalidCliRequest


class AddVolumeToNodeCli(TortugaCli):
    """
    Add volume to node command line interface.
    """

    def __init__(self):
        TortugaCli.__init__(self)

        self.addOption('--node', dest='node', help=_('node name'))
        self.addOption('--volume', dest='volume',
                       help=_('SAN volume identifier'))
        self.addOption('--indirect', dest='indirect', action="store_true",
                       help=_('Force indirect storage connection'))
        self.addOption('--direct', dest='direct', action='store_true',
                       help=_('Force direct storage connection'))

    def runCommand(self):
        self.parseArgs(_("""
    add-volume-to-node --volume=VOLUME --node=NODE [ --direct | --indirect ]

Description:
    The add-volume-to-node tool adds an pre-existing storage volume to an existing node.
    This command will only work with nodes associated with a hardware profile that
    supports dynamic addition and deletion of storage volumes.  For hardware profiles
    that support both indirect and direct methods of attachment the --direct and
    --indirect options can be used to choose the method to use.  If these options are
    omitted the hardware profiles resource adapter determines the default.
"""))
        node = self.getOptions().node
        volume = self.getOptions().volume
        direct = self.getOptions().direct
        indirect = self.getOptions().indirect
        if not node:
            raise InvalidCliRequest(_('Node must be specified'))
        if not volume:
            raise InvalidCliRequest(_('Volume must be specified'))
        if direct is not None and indirect is not None:
            raise InvalidCliRequest(
                _('Only one of --direct or --indirect may be specified.'))

        isDirect = None
        if direct:
            isDirect = True
        if indirect:
            isDirect = False

        api = getNodeApi(self.getUsername(), self.getPassword())

        if isDirect is not None:
            api.addStorageVolume(node, volume, isDirect)
        else:
            api.addStorageVolume(node, volume)


if __name__ == '__main__':
    AddVolumeToNodeCli().run()
