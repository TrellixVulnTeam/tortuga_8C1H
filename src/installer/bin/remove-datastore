#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

from tortuga.cli.tortugaCli import TortugaCli
from tortuga.exceptions.invalidCliRequest import InvalidCliRequest
from tortuga.softwareprofile.softwareProfileFactory \
    import getSoftwareProfileApi


class RemoveDatastoreCli(TortugaCli):
    def __init__(self):
        TortugaCli.__init__(self)

        # Define command line options
        self.addOption(
            '--software-profile', metavar='SOFTWAREPROFILENAME',
            dest='softwareProfileName',
            help=_('Software profile from which to detach datastore'))

        self.addOption(
            '--label', dest='label', help=_('Label of datastore'))

    def runCommand(self):
        self.parseArgs('''
    remove-datastore --software-profile=SOFTWAREPROFILENAME --label=LABEL

Description:

    The remove-datastore command removes a datastore from the hypervisors under
    the given software profile. A datastore is a location where virtual machine
    information can be stored by a virtual machine manager.

    Datastores differ from volumes in that volumes are disks which are directly or
    indirectly mounted on a node. Datastores, on the other hand, are storage locations
    where hypervisors store virtual disks, virtual BIOS settings, etc.

    While a volume can be connected to any node (including a hypervisor) to provide
    general storage just like adding a physical hard disk to a machine, datastores
    may only be connected to a hypervisor, and are not directly visible to the virtual
    machines running on that hypervisor.

    Attempting to remove a datastore which has active virtual machines on it will
    fail. It is possible that the datastore will be removed partially (from only
    some machines in the software profile). If this happens, you can simply re-add it
    using the add-datastore command.

    Datastores may be examined using the get-datastore-list command, and added using
    the add-datastore command.
''')

        # Get command line options
        options = self.getOptions()

        # Check for required parameters
        if not options.softwareProfileName:
            raise InvalidCliRequest('Software profile name must be specified')

        if not options.label:
            raise InvalidCliRequest('Datastore label must be specified')

        # Check for optional parameters
        # No optional paramters exist for this command

        # ! ! ! Temporary version of this command ! ! !
        # ! ! ! ! Uses resource adapter directly  ! ! !

        # Get options
        label = options.label

        # Check that software profile is an ESX one
        getSoftwareProfileApi().getSoftwareProfile(options.softwareProfileName)

        # Grab resource adapter
        from tortuga.resourceAdapter.vmware_adapter import Vmware_adapter
        resourceAdapter = Vmware_adapter()

        # Attempt to add datastore
        resourceAdapter.removeDatastore(options.softwareProfileName, label)


if __name__ == '__main__':
    RemoveDatastoreCli().run()
