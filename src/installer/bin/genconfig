#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

'''

NAME
    genconfig - generate configuration file

SYNOPSIS
    genconfig cname

DESCRIPTION
    The genconfig command generates the configuration
    file for the given component onto the standard output.

'''

import sys

from tortuga.cli.tortugaCli import TortugaCli


class GenconfigAppClass(TortugaCli):
    def __init__(self):
        # 'validArgCount' should probably be infinite but 4 seems to
        # cover all the current conditions.
        TortugaCli.__init__(self, validArgCount=4)

    def runCommand(self):
        self.parseArgs(_('''\
genconfig <component name> [args...]

For example,

    "ganglia component-ganglia-gmetad"

generates gmetad.conf on the standard output.
'''))

        args = self.getArgs()

        # First argument is component name
        cname = args[0]

        from tortuga.kit.actions.manager import KitActionsManager
        kitmgr = KitActionsManager()

        component = kitmgr.load_component(cname)

        nodegroup = 'installer'

        if '_configure' not in dir(component):
            print(_('This component does not have configuration'), file=sys.stderr)
            sys.exit(0)

        component._configure(nodegroup, sys.stdout, args[1:])


if __name__ == '__main__':
    GenconfigAppClass().run()
