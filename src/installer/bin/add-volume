#!/usr/bin/env python

# Copyright 2008-2018 Univa Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=no-member

from tortuga.cli.tortugaCli import TortugaCli
from tortuga.san.sanApiFactory import getSanApi
from tortuga.exceptions.invalidCliRequest import InvalidCliRequest


class AddVolumeCli(TortugaCli):
    """
    Add volume command line interface.
    """

    def __init__(self):
        TortugaCli.__init__(self)

        self.addOption('--storage-adapter', dest='storageAdapter',
                       help=_('Storage adapter to use'))

        self.addOption('--size', dest='size',
                       help=_('Size of new volume.  Use GB or MB suffix.'
                              '  No suffix defaults to MB.'))

        self.addOption('--shared', dest='shared', default=False,
                       action="store_true",
                       help=_('If set the drive can be mounted by multiple'
                              ' nodes simultaneously.'))

        self.addOption('--name-format', default='*', dest='nameFormat',
                       help=_('Name of volume to create'
                              ' (default is generated UUID)'))

    def runCommand(self):
        self.parseArgs(_("""
    add-volume --storage-adapter STORAGEADAPTER --size SIZE [ --shared --name-format FORMAT ]

Description:
    The add-volume tool creates a new storage volume in the cluster that can be associated with nodes.
"""))
        if not self.getOptions().storageAdapter:
            raise InvalidCliRequest(_('Storage Adapter must be specified'))

        if not self.getOptions().size:
            raise InvalidCliRequest(_('Size must be specified'))

        # Validate disk size
        diskSize = self._parseDiskSize(self.getOptions().size)

        api = getSanApi(self.getUsername(), self.getPassword())

        api.addVolume(
            storageAdapter=self.getOptions().storageAdapter, size=diskSize,
            nameFormat=self.getOptions().nameFormat,
            shared=self.getOptions().shared)


if __name__ == '__main__':
    AddVolumeCli().run()
